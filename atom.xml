<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[laphets's Blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://laphets.com/"/>
  <updated>2015-11-27T17:48:36.884Z</updated>
  <id>http://laphets.com/</id>
  
  <author>
    <name><![CDATA[laphets]]></name>
    <email><![CDATA[768066323@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[初涉C#制作扫雷游戏]]></title>
    <link href="http://laphets.com/2015/11/28/%E5%88%9D%E6%B6%89C%E5%88%B6%E4%BD%9C%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F/"/>
    <id>http://laphets.com/2015/11/28/初涉C制作扫雷游戏/</id>
    <published>2015-11-27T17:33:57.000Z</published>
    <updated>2015-11-27T17:48:36.884Z</updated>
    <content type="html"><![CDATA[<h2 id="起因">起因</h2><p>最近OI退役了，文化课滚粗了，感觉无事可做，于是便准备用C#来搞搞开发。在这篇文章里我只想浅略的谈一谈我的代码实现过程，至于详细的制作，请参阅这篇<em><a href="http://www.ivy-end.com/archives/1704" target="_blank" rel="external">博文</a></em>。同时我也要给这位写教程的学长好评，真的是超详细，太赞啦！</p>
<h2 id="代码托管">代码托管</h2><p>该项目的代码我已经托管在<strong><a href="https://github.com/laphets/Minesweeper" target="_blank" rel="external">GitHub</a></strong>上，大家可以自行查看，有什么值得改进的地方欢迎向我指出。</p>
<h2 id="正文">正文</h2><h3 id="雷区绘制的有关技术问题">雷区绘制的有关技术问题</h3><h3 id="Settings-settings的相关操作">Settings.settings的相关操作</h3><h3 id="UpdateSize函数的有关技术问题">UpdateSize函数的有关技术问题</h3><p><em>//last update：2015/11/28/01:36</em></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="起因">起因</h2><p>最近OI退役了，文化课滚粗了，感觉无事可做，于是便准备用C#来搞搞开发。在这篇文章里我只想浅略的谈一谈我的代码实现过程，至于详细的制作，请参阅这篇<em><a href="http://www.ivy-end.com/archives/]]>
    </summary>
    
      <category term="C#" scheme="http://laphets.com/tags/C/"/>
    
      <category term="理性" scheme="http://laphets.com/categories/%E7%90%86%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[再见 OI！]]></title>
    <link href="http://laphets.com/2015/11/21/%E5%86%8D%E8%A7%81%20OI%EF%BC%81/"/>
    <id>http://laphets.com/2015/11/21/再见 OI！/</id>
    <published>2015-11-21T06:47:42.000Z</published>
    <updated>2015-11-21T16:36:31.644Z</updated>
    <content type="html"><![CDATA[<h2 id="赛后两天">赛后两天</h2><p>洛谷的民间数据出来了，貌似只有290？（100+100+0+60+10+20）。Day1T3 hash表没初始化，全炸了？Day2T1 写堆貌似贪心是错的？Day2T2 DP不会打又炸了？Day2T3 不会傻逼枚举然后贪心贪错了，直接20分搞到滚粗？290分在FJ能搞到省二左右（也是踩线），ZJ目测就直接出局了。</p>
<p>这两天过得真的很难受，各种想法都在脑子里浮现：辛辛苦苦努力了一年然后省三滚粗了？以后永远只能待在教室里敲不了代码了？自己想的拿个省一然后自招都是幻想？学校弱自己弱却无法改变？ 一切的一切都使我颓废不已，我是真的弱，真的水，真的粗心，明明好不容易有了一个机会，却白白浪费掉了，我要怎么向陈老师去交代，怎么向学长交代，怎么向自己交代？同时，文化课也让我变得十分迷茫，逃了这么多的课，漏了不知道多少东西，各种题目都不会，做出来是错的，已然感觉要双向滚粗了。我能明明白白感受到只有唯一一次机会却失去后而无法弥补的悲哀。我整天想着最后成绩出来了拿了个三=怎么见人，口口声声说着自己弱，经常都颓丧得趴在桌子上想着自己当时写题的时候怎么那么水，状态那么差，各种遗憾之类的。而事实上，这又能有什么用？准确来说，没有半点卵用都没有。去衢州这一次真的就是彻彻底底的失败，就是铩羽而归，而我又能改变得了什么？难不成我有办法去改源码，去改CCF的数据？<strong>既然已经失去了一次机会，那就更应该去珍惜去利用现在眼前的一切，而不该在未来的高考之后再去后悔此刻时光的弥足珍贵，去埋怨现在的自己没有好好努力，而是很傻逼的在后悔、在遗憾早已无法改变的东西。</strong>我也更能相信，将来的我也一定不会喜欢看到现在颓废的我的。</p>
<p><strong>高考750分，把人生变成750岁；OI600分，让记忆只剩下1S，128MB</strong>我应该庆幸当时的自己没有错过OI这有趣的东西，能让自己在高中有过这样一段弥足珍贵的时光，更能接触到许许多多的算法，领略到与别人完全不同的东西，<strong>就算最终现实与梦想背道而驰，我也应该为自己有过这样的一段为梦想而执着过的经历而感到高兴</strong>。</p>
<p>接着我就该退役了，想想自己当时在机房黑板上大大写着的”NOIP2015 RP++”的话还是感觉挺好笑的。也正像Day2的解压密码”2016Xia%MY@jian”虽然我不能坚持到2016夏天与你再见，但我仍会一直记得，<strong>我曾经也是个OIer，虽然未曾成功，虽然抱有遗憾，但我也确确实实是广大为自己梦想而执着的OIer中的那一个，并且会为在高中有过这样一段拼搏的时光而感到欣喜与骄傲！</strong></p>
<p>最后，我要给马上回到文化课忙忙碌碌学习中的自己打气，这一段时光同样也是弥足珍贵的，just fighting！</p>
<h2 id="赛后一星期">赛后一星期</h2><p>知道成绩了，没能像想象中那样翻盘，心里还是挺空落的。不止一次地觉得自己弱，自己水，特别是当每次做题被卡，或是看到别人获了什么奖，拿了什么牌时，心里就特别不是滋味。一项奋斗了这么长时间的东西，最终却没有得到自己想要的结果，败兴而归，是多么的遗憾啊。</p>
<p><strong>“当时选择了这条路的我，就是奔着单纯的拿奖去的吗？”</strong>我也曾不止一次地这样问过自己，而事实上，我也找不出答案。仔细回顾这一年的时光，发现除了刚开始那段，一级最后比赛前目标清晰过外，其余的，大多是在浑浑噩噩，目标模糊中度过的。而现在的我，却更加感触不到未来，感触不到理想，甚至，开始变得麻木，变得适从。<strong>我讨厌这种失去方向失去理想，而只能每天在相同的循环中度过却无法改变的感觉！</strong>一个东西，当你曾经拥有并视之如命，而突然之间，突然得你都无法确切感知到，它便失去了踪影，任你怎么寻都无法寻到，或许，现在的我也正是这样一种感受。</p>
<p>我的脑海中，能清晰地记得那个夜晚，一个人独自随坐在机房的讲台上，昏暗的灯光下，津津有味地看着NOI导刊中的线段树，感受着每一次思维的运转；我更加能记得，那些个无数的下午，晚上，我们6个人（gxy,yzy,zsh,ysy,wkw和我）在机房里，占据了前三排，听课，打题，或是不时地聊聊天，使冻结了的空气中，也有了一丝暖气。这一切的一切，便好似昨天刚刚发生过，而现在看来，真是恍如隔世。</p>
<blockquote>
<p><strong>“放慢所有 回忆里的感受 只怕听见 谁忽然泪流 那些曾经 不经事的哀愁  如今是最愉快的拥有”</strong></p>
</blockquote>
<p>（不知道是巧合还是啥，敲到这里的时候就刚刚听到这段歌词）。<strong>或许，回忆也不仅仅只能带给人伤痛，每一个无比清晰的片刻，每一个一起奋斗过的好友，以及那早已被敲得掉了字的键盘和满是污渍的鼠标，都让我真真实实地感受到时间的流逝，感受到灵感突来的欣喜，以及获得新知的激动。</strong>现在的我，也足以能够欣慰地回味这一年所经历的一切，并自豪地对别人说：“我用相同的时间，领略到了另一个世界！”这或许才是OI真正的魅力所在：看着每一次的提交由红色的Wrong Answer，变成绿色的Accept，由一百或是几十的分数，一步一步地爬升到300，以及那一次次走上讲台评测时，掩盖不住内心激动的沉着，这才是兴奋，才是喜悦，才是成长！</p>
<p>遗憾的是，现在的我要向OI道别了，而我也无从知道下次相见会是何时，亦或是，后会无期。正如鲁迅先生所说（果真被语文老师说中了……），真的猛士，敢于直面惨淡的人生，敢于正视淋漓的鲜血。<strong>文化课固然是枯燥无味而又寥寥无期的，而正是这一天天未曾间断的求索，才给予了你终有一天的辉煌。造化是为庸人所设计的，而也只有庸人，才会被动地屈服，顺从于眼前的一切。每个人，都不想成为庸人，自然，我也不想。</strong></p>
<p>新的一切都还在未来的路上等着你，而那一切，也只有顽强，勇毅而又不失聪慧的人才能得的到，So,just fighting!</p>
<p><img src="http://ww3.sinaimg.cn/mw690/005P1zB8gw1ey0i8dcjggj31kw0w0wor.jpg" alt="...."></p>
<p><img src="http://ww4.sinaimg.cn/mw690/005P1zB8gw1ey0i9mdw8mj31g02kge81.jpg" alt="...."></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="赛后两天">赛后两天</h2><p>洛谷的民间数据出来了，貌似只有290？（100+100+0+60+10+20）。Day1T3 hash表没初始化，全炸了？Day2T1 写堆貌似贪心是错的？Day2T2 DP不会打又炸了？Day2T3 不会傻逼枚举然后贪心贪错了]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写在NOIP2015复赛之前]]></title>
    <link href="http://laphets.com/2015/11/06/%E5%86%99%E5%9C%A8NOIP2015%E5%A4%8D%E8%B5%9B%E4%B9%8B%E5%89%8D/"/>
    <id>http://laphets.com/2015/11/06/写在NOIP2015复赛之前/</id>
    <published>2015-11-06T13:58:42.000Z</published>
    <updated>2015-12-14T06:24:50.406Z</updated>
    <content type="html"><![CDATA[<h3 id="现在是2015年11月6日，再过一天就是2015年11月7日">现在是2015年11月6日，再过一天就是2015年11月7日</h3><h3 id="明天就是NOIP2015复赛day1的日子">明天就是NOIP2015复赛day1的日子</h3><h3 id="yzy加油_lzw加油_zbt加油_chp加油_lwq加油！">yzy加油 lzw加油 zbt加油 chp加油 lwq加油！</h3><h3 id="YZOI加油！">YZOI加油！</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(rp=<span class="number">1</span>;;rp+=INF);</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="现在是2015年11月6日，再过一天就是2015年11月7日">现在是2015年11月6日，再过一天就是2015年11月7日</h3><h3 id="明天就是NOIP2015复赛day1的日子">明天就是NOIP2015复赛day1的日子</h3><h3 id="]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[杭二酱油记]]></title>
    <link href="http://laphets.com/2015/11/02/%E6%9D%AD%E4%BA%8C%E9%85%B1%E6%B2%B9%E8%AE%B0/"/>
    <id>http://laphets.com/2015/11/02/杭二酱油记/</id>
    <published>2015-11-02T15:17:57.000Z</published>
    <updated>2015-11-02T15:38:56.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/mw690/005P1zB8gw1exn214wzkbj31kw16owv2.jpg" alt="...."><br>终于或许结束了，从一开始的学军到今天的杭二，或许我没有学到许多知识，但却有了常人不容易有的经历。坐在颠簸的火车上，回想着杭二的一切，虽然只有短短的连一天都谈不上，但这一天里我却也明白了许多。比起杭二来说，我们学校只不过是一个处于乡村欠发达地区的弱校罢了，我们没有强大的师资力量，我们没有好的生源，我们更没有足够好的气氛来带动自身的学习，在这样的一种现实下，我想作为一个弱校的蒟蒻，或许会由于各种原因被虐，被D，被瞧不起，但是，既然我们出来了，就不能让别人由于瞧不起我们而瞧不起我们义中。我们是水平低，是弱，但这并不能表明我们会因此而不想上进，会因此而颓废，就像zbt说的那样，既然知道自己是弱，那就不能让自己一直这么弱下去。而我知道，现在离复赛的时间也不多了，因此，我需要做的只是珍惜这最后的来之不易的机会，在自己的OI生涯画上句号之前，好好珍惜在机房最后的时间，认真做好最后的每一道题，不要给退役后的自己留下任何遗憾。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://ww1.sinaimg.cn/mw690/005P1zB8gw1exn214wzkbj31kw16owv2.jpg" alt="...."><br>终于或许结束了，从一开始的学军到今天的杭二，或许我没有学到许多知识，但却有了常人不容易有的经]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[vijos1285 佳佳的魔法药水]]></title>
    <link href="http://laphets.com/2015/11/02/vijos1285%E4%BD%B3%E4%BD%B3%E7%9A%84%E9%AD%94%E6%B3%95%E8%8D%AF%E6%B0%B4/"/>
    <id>http://laphets.com/2015/11/02/vijos1285佳佳的魔法药水/</id>
    <published>2015-11-02T09:45:49.000Z</published>
    <updated>2015-11-02T15:52:10.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目大意">题目大意</h2><p>给出n中个药水的价格，其中只有可能A+B合成C，叫你求出合成0号药水的最少花费和方案数</p>
<h2 id="解题过程">解题过程</h2><p>考虑图论模型，即如果A和B能转化成C，那么便在A.B和C中连一条边，然后就直接跑dijkstra，每次取出最小的花费val[i]去更新其他药水的花费，当然这里的其他药水必须是已经更新过了的，至于方案数的话乘法原理一用就跑出来了.</p>
<h2 id="总结">总结</h2><p>所谓的最短路，并不一定只有在有实际的“路”的题目中才用得到，关键是把题目转化为图论模型，把更新条件转化为”路“。此题没有对dijkstra算法贪心的精髓理解深刻是难以转化为图论模型的。</p>
<h2 id="代码">代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">0x7f7f7f</span>;</span><br><span class="line"><span class="keyword">int</span> n,tot[maxn],val[maxn],a[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> x,y,z;</span><br><span class="line"><span class="keyword">bool</span> v[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line"><span class="comment">//	freopen("1.sb","r",stdin);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;val[i]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			a[i][j]=n+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">		tot[i]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&gt;&gt;z)</span><br><span class="line">		a[x][y]=a[y][x]=z;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> minn=INF,k=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			<span class="keyword">if</span>(!v[j]&amp;&amp;val[j]&lt;minn)</span><br><span class="line">			&#123;</span><br><span class="line">				minn=val[j];</span><br><span class="line">				k=j;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span>(minn==INF)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		v[k]=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">			<span class="keyword">if</span>(v[j]&amp;&amp;a[k][j]&lt;n+<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(val[a[k][j]]&gt;val[k]+val[j])</span><br><span class="line">				&#123;</span><br><span class="line">					val[a[k][j]]=val[k]+val[j];</span><br><span class="line">					tot[a[k][j]]=tot[k]*tot[j];</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(val[a[k][j]]==val[k]+val[j])</span><br><span class="line">					tot[a[k][j]]+=tot[k]*tot[j];		</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d"</span>,val[<span class="number">0</span>],tot[<span class="number">0</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目大意">题目大意</h2><p>给出n中个药水的价格，其中只有可能A+B合成C，叫你求出合成0号药水的最少花费和方案数</p>
<h2 id="解题过程">解题过程</h2><p>考虑图论模型，即如果A和B能转化成C，那么便在A.B和C中连一条边，然后就直接跑]]>
    </summary>
    
      <category term="图论" scheme="http://laphets.com/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="理性" scheme="http://laphets.com/categories/%E7%90%86%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈树形动规的一般解法步骤]]></title>
    <link href="http://laphets.com/2015/10/27/%E6%B5%85%E8%B0%88%E6%A0%91%E5%BD%A2%E5%8A%A8%E8%A7%84%E7%9A%84%E4%B8%80%E8%88%AC%E8%A7%A3%E6%B3%95%E6%AD%A5%E9%AA%A4/"/>
    <id>http://laphets.com/2015/10/27/浅谈树形动规的一般解法步骤/</id>
    <published>2015-10-27T10:17:09.000Z</published>
    <updated>2015-10-27T10:48:48.000Z</updated>
    <content type="html"><![CDATA[<h2 id="一道题目">一道题目</h2><h3 id="问题描述">问题描述</h3><p>长郡中学校长打算举行建校100周年的晚会。学校的职员是分等级的，也就是说职员之间的上下级关系组成一棵以校长为树根的树。校长要亲自邀请一些职员参见晚会。同时校长亲自到场欢庆这个节日。职员用1～n之间的整数编号，人事处给出了每个职员的搞笑指数。如果一个人和他上司一起参加，那么便可能产生麻烦。为了使晚会的每个参加者都高兴，校长不会同时邀请某个职员和他的顶头上司。<br>你的任务是给出一个客人列表，使得客人的搞笑指数之和最大。</p>
<h3 id="输入">输入</h3><p>第一行一个整数n（1≤n≤6000）。以下n行每行是相应编号职员的搞笑指数，该数的返回是[-128..127]。然后是职员的关系树，每行格式是<x> <y>，意思是第y个职员是第x个职员的顶头上司。输入以0 0结束。</y></x></p>
<h3 id="输出">输出</h3><p>最大的搞笑指数之和。</p>
<h2 id="题目分析">题目分析</h2><p>表示以前几乎就没接触过这种题目是什么鬼…，然后就开始傻逼bfs，然后就爆了。正解：用f[i][0]表示以i为根的子树，且i一定不取所产生的最大权值，用f[i][1]表示以i为根的子树，且i一定取所产生的最大权值，因此对于f[i][1]，它的子节点一定不能取，对于f[i][0]，它的子节点可以取也可以不取，因此最后的状态转移方程为：$f[i][0]=\sum\limits_{j=1}^{childsize}{\max {f[j][1],f[j][0]}}$.</p>
<h2 id="一般解题方法">一般解题方法</h2><ol>
<li>找出所有根节点并入队</li>
<li>取出队首元素，更新其父亲节点并将其父亲节点入度减1</li>
<li>判断其父亲节点入度是否为0，若是，则入队</li>
<li>重复步骤1<h2 id="贴个代码">贴个代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="preprocessor">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">6000</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> x,y,n,a,b,cnt,f[maxn][<span class="number">2</span>],q[maxn],val[maxn],num[maxn],pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	freopen(<span class="string">"1.sb"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;val[i]);</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;y&amp;&amp;x!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		pre[x]=y;</span><br><span class="line">		num[y]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		<span class="keyword">if</span>(num[i]==<span class="number">0</span>)</span><br><span class="line">			q[++cnt]=i;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=cnt;k++)</span><br><span class="line">	&#123;</span><br><span class="line">		a=q[k];</span><br><span class="line">		f[a][<span class="number">1</span>]+=val[a];</span><br><span class="line">		b=pre[a];</span><br><span class="line">		<span class="keyword">if</span>(b==<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		f[b][<span class="number">1</span>]+=f[a][<span class="number">0</span>];</span><br><span class="line">		f[b][<span class="number">0</span>]+=max(f[a][<span class="number">0</span>],f[a][<span class="number">1</span>]);</span><br><span class="line">		num[b]--;</span><br><span class="line">		<span class="keyword">if</span>(!num[b])</span><br><span class="line">			q[++cnt]=b;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d"</span>,f[a][<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="一道题目">一道题目</h2><h3 id="问题描述">问题描述</h3><p>长郡中学校长打算举行建校100周年的晚会。学校的职员是分等级的，也就是说职员之间的上下级关系组成一棵以校长为树根的树。校长要亲自邀请一些职员参见晚会。同时校长亲自到场欢庆这个节日。职]]>
    </summary>
    
      <category term="动态规划" scheme="http://laphets.com/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="理性" scheme="http://laphets.com/categories/%E7%90%86%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[他]]></title>
    <link href="http://laphets.com/2015/10/24/%E4%BB%96/"/>
    <id>http://laphets.com/2015/10/24/他/</id>
    <published>2015-10-24T12:48:18.000Z</published>
    <updated>2015-10-24T12:55:56.000Z</updated>
    <content type="html"><![CDATA[<p>他在一片喧闹中揉了揉惺忪的双眼，这时，同学告诉他得起床了，于是，他一骨碌跳下了床，以极快的速度刷完牙，迷迷糊糊奔出了寝室的大门，并且不小心摔了一跤，将他一把从刚刚未完成的梦中摔醒。他很普通，普通到几乎不会有什么人对他产生过过于深刻的印象。他调皮爱捣蛋，最喜欢在课堂上学着周立“波“的腔儿挑弄老师，为此，老师也没少恼他。他喜欢一个人静静坐在机房，在夜幕降临的那一际，思索着人生，因为，他喜欢，那束最后太阳的余晖洒在地板上所产生的光晕。他喜欢独自一人，独自一人走出喧闹过后的食堂，面朝着空无一人的大道，而或许是他产生幻觉了，因为他分明看到了那些为OI付出一切的学长们，正朝着他挥手。他有着自己喜欢并且热爱的事业，从这一点来说，他是足够幸运的，却也足够无奈。他会莫名其妙地数着一张由一张的作业纸，口中不时吐槽着”这题目真特么鬼畜“，“总有老师想要谋害朕之类的话语，而也只有他自己才能明白，迎接他的是无穷的寂寞与空虚。</p>
<p>他只是那个他，而我也只是那个我。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>他在一片喧闹中揉了揉惺忪的双眼，这时，同学告诉他得起床了，于是，他一骨碌跳下了床，以极快的速度刷完牙，迷迷糊糊奔出了寝室的大门，并且不小心摔了一跤，将他一把从刚刚未完成的梦中摔醒。他很普通，普通到几乎不会有什么人对他产生过过于深刻的印象。他调皮爱捣蛋，最喜欢在课堂上学着周立]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈线段树及其应用]]></title>
    <link href="http://laphets.com/2015/10/22/%E6%B5%85%E8%B0%88%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/"/>
    <id>http://laphets.com/2015/10/22/浅谈线段树及其应用/</id>
    <published>2015-10-22T13:07:15.000Z</published>
    <updated>2015-10-23T09:22:34.000Z</updated>
    <content type="html"><![CDATA[<h2 id="线段树的定义">线段树的定义</h2><p>线段树(<em>segment tree</em>)是一种二叉搜索树，与区间树相似，它将一个区间划分成一些单元区间，每个单元区间对应线段树中的一个叶结点。<br>使用线段树可以快速的查找某一个节点在若干条线段中出现的次数，时间复杂度为O(logN）。而未优化的空间复杂度为2N，因此有时需要离散化让空间压缩。</p>
<h2 id="线段树的作用">线段树的作用</h2><blockquote>
<blockquote>
<p>有一列数，初始值全为0，每次可以进行以下三种操作中的一种：<br>(1)给指定区间每个数加上一个值<br>(2)将指定区间所有数置成一个统一的值<br>(3)询问一个区间上的最小值、最大值、所有数的和</p>
</blockquote>
</blockquote>
<h2 id="线段树的存储">线段树的存储</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	int <span class="keyword">left</span>,<span class="keyword">right</span>;</span><br><span class="line">	int <span class="built_in">min</span>,<span class="built_in">max</span>,sum;</span><br><span class="line">	<span class="type">Node</span> *leftchild,*rightchild;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="线段树的构造">线段树的构造</h2><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">void build(Node *cur,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span><br><span class="line">&#123;</span><br><span class="line">	cur-&gt;left=l;</span><br><span class="line">	cur-&gt;right=r;</span><br><span class="line">	<span class="keyword">if</span>(l!=r)</span><br><span class="line">	&#123;</span><br><span class="line">		cur-&gt;leftchild=<span class="keyword">new</span> Node;</span><br><span class="line">		cur-&gt;rightchild=<span class="keyword">new</span> Node;</span><br><span class="line">		build(cur-&gt;leftchild,l,(l+r)/<span class="number">2</span>);</span><br><span class="line">		build(cur-&gt;rightchild,(l+r)/<span class="number">2</span>+<span class="number">1</span>,r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		cur-&gt;leftchild=cur-&gt;rightchild=<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在线段树上对元素进行修改">在线段树上对元素进行修改</h2><p>将线段树上位置为x的元素修改成num<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">void</span> insert(Node *cur,int x,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>left==cur<span class="subst">-&gt;</span>right)</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">min</span>=cur<span class="subst">-&gt;</span><span class="keyword">max</span>=cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=num;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(lc,x,num);</span><br><span class="line">		<span class="keyword">if</span>(x&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(rc,x,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span><span class="keyword">sum</span>;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">max</span>=<span class="keyword">max</span>(lc<span class="subst">-&gt;</span><span class="keyword">max</span>,rc<span class="subst">-&gt;</span><span class="keyword">max</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">min</span>=<span class="keyword">min</span>(lc<span class="subst">-&gt;</span><span class="keyword">min</span>,rc<span class="subst">-&gt;</span><span class="keyword">min</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="对线段树的某一个区间进行询问">对线段树的某一个区间进行询问</h2><p>询问区间[l,r]所有元素和<br><figure class="highlight rust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> querysum(Node *cur,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur-&gt;leftchild,*rc=cur-&gt;rightchild;</span><br><span class="line">	<span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur-&gt;left)&amp;&amp;(cur-&gt;right&lt;=r))</span><br><span class="line">		ret+=cur-&gt;sum;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur-&gt;left+cur-&gt;right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(lc,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur-&gt;left+cur-&gt;right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(rc,l,r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="那么对于整个区间进行操作呢？">那么对于整个区间进行操作呢？</h2><p>是不是需要对每一个元素都进行insert()操作呢？<br>显然不行，那样的话每一次操作都要$O(nlogn)$，失去了线段树的优势。</p>
<h3 id="lazy-tag技术："><strong>lazy-tag</strong>技术：</h3><blockquote>
<blockquote>
<p>lazy-tag的思想就是在对区间进行更新的时候，在分解出来的区间上打上作用于整个子树的标记<br>当在对这个区间进行维护或者查询的时候便将这个标记进行分解，并将其传递到它的两个子树上。</p>
</blockquote>
</blockquote>
<h2 id="对一个区间整体加上一个数">对一个区间整体加上一个数</h2><p>将区间[l,r]整体加上delta<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">void</span> update(Node *cur,int l,int r,int delta)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta+=delta;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			update(lc,l,r,delta);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			update(rc,l,r,delta);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="使用lazy-tag技术对元素进行修改">使用<strong>lazy-tag</strong>技术对元素进行修改</h2><p>将位置为x的元素修改为num<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">void</span> insert(Node *cur,int x,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>left==cur<span class="subst">-&gt;</span>right)</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=num;</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		lc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		rc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(x&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(lc,x,num);</span><br><span class="line">		<span class="keyword">if</span>(x&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(rc,x,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="使用lazy-tag技术对区间进行查询">使用<strong>lazy-tag</strong>技术对区间进行查询</h2><p>询问区间[l,r]上所有元素的和<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">int querysum(Node *cur,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	int ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">		ret+=cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+(cur<span class="subst">-&gt;</span>right<span class="attribute">-cur</span><span class="subst">-&gt;</span>left+<span class="number">1</span>)*cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		lc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		rc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(lc,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(rc,l,r);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="将一个区间整体置为一个数">将一个区间整体置为一个数</h2><p>额外维护两个域en表示一个区间是否为统一的数，若en有效，则data域表示区间统一的数的数值。<br>同样，我们可以用<strong>lazy-tag</strong>来维护这种操作</p>
<h2 id="求一个节点表示区间上所有元素的和">求一个节点表示区间上所有元素的和</h2><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">inline</span> int clacsum(Node *cur)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">		<span class="keyword">return</span> (cur<span class="subst">-&gt;</span>right<span class="attribute">-cur</span><span class="subst">-&gt;</span>left+<span class="number">1</span>)*cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">	<span class="keyword">return</span> cur<span class="subst">-&gt;</span><span class="keyword">sum</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="修改一个节点的值">修改一个节点的值</h2><p>将位置为x的元素修改为num<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">void</span> insert(Node *cur,int x,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>left==cur<span class="subst">-&gt;</span>right)</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=num;</span><br><span class="line">		cur<span class="subst">-&gt;</span>en=<span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">		&#123;</span><br><span class="line">			lc<span class="subst">-&gt;</span><span class="built_in">data</span>=rc<span class="subst">-&gt;</span><span class="built_in">data</span>=cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">			lc<span class="subst">-&gt;</span>en=rc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">			cur<span class="subst">-&gt;</span>en=<span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(x&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(lc,x,num);</span><br><span class="line">		<span class="keyword">if</span>(x&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(rc,x,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=clacsum(lc)+clacsum(rc);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="修改整个区间的值">修改整个区间的值</h2><p>将区间[l,r]上所有元素的值置为num<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">void</span> update(Node *cur,int l,int r,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(lc!=<span class="built_in">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			lc<span class="subst">-&gt;</span><span class="built_in">data</span>=num;</span><br><span class="line">			lc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(rc!=<span class="built_in">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			rc<span class="subst">-&gt;</span><span class="built_in">data</span>=num;</span><br><span class="line">			rc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="built_in">data</span>=num;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			update(lc,l,r,num);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right))</span><br><span class="line">			update(rc,l,r,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=calcsum(lc)+calcsum(rc);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="查询区间的和">查询区间的和</h2><p>询问区间[l,r]上所有元素的和<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">int querysum(Node *cur,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	int ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))<span class="subst">\</span></span><br><span class="line">		ret+=clacsum(cur);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">		&#123;</span><br><span class="line">			lc<span class="subst">-&gt;</span><span class="built_in">data</span>=cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">			lc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">			rc<span class="subst">-&gt;</span><span class="built_in">data</span>=cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">			rc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">			cur<span class="subst">-&gt;</span>en=<span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(lc,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(rc,l,r);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="总结">总结</h2><p><strong>到这里就差不多写完了，把所有操作的代码汇个总:</strong><br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">#include</span>&lt;iostream&gt;</span><br><span class="line"><span class="variable">#include</span>&lt;cstdio&gt;</span><br><span class="line"><span class="variable">#include</span>&lt;algorithm&gt;</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">struct Node</span><br><span class="line">&#123;</span><br><span class="line">	int left,right;</span><br><span class="line">	int <span class="keyword">min</span>,<span class="keyword">max</span>,<span class="keyword">sum</span>,delta;</span><br><span class="line">	bool en;</span><br><span class="line">	Node *leftchild,*rightchild;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="literal">void</span> build(Node *cur,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">	cur<span class="subst">-&gt;</span>left=l;</span><br><span class="line">	cur<span class="subst">-&gt;</span>right=r;</span><br><span class="line">	<span class="keyword">if</span>(l!=r)</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span>leftchild=<span class="literal">new</span> Node;</span><br><span class="line">		cur<span class="subst">-&gt;</span>rightchild=<span class="literal">new</span> Node;</span><br><span class="line">		build(cur<span class="subst">-&gt;</span>leftchild,l,(l+r)/<span class="number">2</span>);</span><br><span class="line">		build(cur<span class="subst">-&gt;</span>rightchild,(l+r)/<span class="number">2</span>+<span class="number">1</span>,r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		cur<span class="subst">-&gt;</span>leftchild=cur<span class="subst">-&gt;</span>rightchild=<span class="built_in">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="literal">void</span> insert(Node *cur,int x,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>left==cur<span class="subst">-&gt;</span>right)</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">min</span>=cur<span class="subst">-&gt;</span><span class="keyword">max</span>=cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=num;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(x&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(lc,x,num);</span><br><span class="line">		<span class="keyword">if</span>(x&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(rc,x,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span><span class="keyword">sum</span>;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">max</span>=<span class="keyword">max</span>(lc<span class="subst">-&gt;</span><span class="keyword">max</span>,rc<span class="subst">-&gt;</span><span class="keyword">max</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">min</span>=<span class="keyword">min</span>(lc<span class="subst">-&gt;</span><span class="keyword">min</span>,rc<span class="subst">-&gt;</span><span class="keyword">min</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int querysum(Node *cur,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	int ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">		ret+=cur<span class="subst">-&gt;</span><span class="keyword">sum</span>;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(lc,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(rc,l,r);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//range</span></span><br><span class="line"><span class="literal">void</span> update(Node *cur,int l,int r,int delta)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta+=delta;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			update(lc,l,r,delta);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			update(rc,l,r,delta);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="literal">void</span> insert(Node *cur,int x,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>left==cur<span class="subst">-&gt;</span>right)</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=num;</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta=<span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		lc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		rc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(x&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(lc,x,num);</span><br><span class="line">		<span class="keyword">if</span>(x&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(rc,x,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int querysum(Node *cur,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	int ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">		ret+=cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+(cur<span class="subst">-&gt;</span>right<span class="attribute">-cur</span><span class="subst">-&gt;</span>left+<span class="number">1</span>)*cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		lc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		rc<span class="subst">-&gt;</span>delta+=cur<span class="subst">-&gt;</span>delta;</span><br><span class="line">		cur<span class="subst">-&gt;</span>delta=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(lc,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(rc,l,r);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//all range</span></span><br><span class="line"><span class="keyword">inline</span> int clacsum(Node *cur)</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">		<span class="keyword">return</span> (cur<span class="subst">-&gt;</span>right<span class="attribute">-cur</span><span class="subst">-&gt;</span>left+<span class="number">1</span>)*cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">	<span class="keyword">return</span> cur<span class="subst">-&gt;</span><span class="keyword">sum</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="literal">void</span> insert(Node *cur,int x,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>left==cur<span class="subst">-&gt;</span>right)</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=num;</span><br><span class="line">		cur<span class="subst">-&gt;</span>en=<span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">		&#123;</span><br><span class="line">			lc<span class="subst">-&gt;</span><span class="built_in">data</span>=rc<span class="subst">-&gt;</span><span class="built_in">data</span>=cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">			lc<span class="subst">-&gt;</span>en=rc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">			cur<span class="subst">-&gt;</span>en=<span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(x&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(lc,x,num);</span><br><span class="line">		<span class="keyword">if</span>(x&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			insert(rc,x,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=clacsum(lc)+clacsum(rc);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="literal">void</span> update(Node *cur,int l,int r,int num)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(lc!=<span class="built_in">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			lc<span class="subst">-&gt;</span><span class="built_in">data</span>=num;</span><br><span class="line">			lc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(rc!=<span class="built_in">NULL</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			rc<span class="subst">-&gt;</span><span class="built_in">data</span>=num;</span><br><span class="line">			rc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))</span><br><span class="line">	&#123;</span><br><span class="line">		cur<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="built_in">data</span>=num;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			update(lc,l,r,num);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right))</span><br><span class="line">			update(rc,l,r,num);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=calcsum(lc)+calcsum(rc);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int querysum(Node *cur,int l,int r)</span><br><span class="line">&#123;</span><br><span class="line">	Node *lc=cur<span class="subst">-&gt;</span>leftchild,*rc=cur<span class="subst">-&gt;</span>rightchild;</span><br><span class="line">	int ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>((l&lt;=cur<span class="subst">-&gt;</span>left)<span class="subst">&amp;&amp;</span>(cur<span class="subst">-&gt;</span>right&lt;=r))<span class="subst">\</span></span><br><span class="line">		ret+=clacsum(cur);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(cur<span class="subst">-&gt;</span>en)</span><br><span class="line">		&#123;</span><br><span class="line">			lc<span class="subst">-&gt;</span><span class="built_in">data</span>=cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">			lc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">			rc<span class="subst">-&gt;</span><span class="built_in">data</span>=cur<span class="subst">-&gt;</span><span class="built_in">data</span>;</span><br><span class="line">			rc<span class="subst">-&gt;</span>en=<span class="literal">true</span>;</span><br><span class="line">			cur<span class="subst">-&gt;</span>en=<span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(l&lt;=(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(lc,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r&gt;(cur<span class="subst">-&gt;</span>left+cur<span class="subst">-&gt;</span>right)/<span class="number">2</span>)</span><br><span class="line">			ret+=querysum(rc,l,r);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>=lc<span class="subst">-&gt;</span><span class="keyword">sum</span>+lc<span class="subst">-&gt;</span>delta*(lc<span class="subst">-&gt;</span>right<span class="attribute">-lc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">		cur<span class="subst">-&gt;</span><span class="keyword">sum</span>+=rc<span class="subst">-&gt;</span><span class="keyword">sum</span>+rc<span class="subst">-&gt;</span>delta*(rc<span class="subst">-&gt;</span>right<span class="attribute">-rc</span><span class="subst">-&gt;</span>left+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="线段树的定义">线段树的定义</h2><p>线段树(<em>segment tree</em>)是一种二叉搜索树，与区间树相似，它将一个区间划分成一些单元区间，每个单元区间对应线段树中的一个叶结点。<br>使用线段树可以快速的查找某一个节点在若干条线段中出现的次数]]>
    </summary>
    
      <category term="数据结构" scheme="http://laphets.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="理性" scheme="http://laphets.com/categories/%E7%90%86%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[浅谈ST算法在RMQ问题中的应用]]></title>
    <link href="http://laphets.com/2015/10/19/%E6%B5%85%E8%B0%88ST%E7%AE%97%E6%B3%95%E5%9C%A8RMQ%E9%97%AE%E9%A2%98%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://laphets.com/2015/10/19/浅谈ST算法在RMQ问题中的应用/</id>
    <published>2015-10-19T03:38:34.000Z</published>
    <updated>2015-10-19T11:49:22.000Z</updated>
    <content type="html"><![CDATA[<h2 id="题目大意">题目大意</h2><p>给你一个序列，叫你找出该序列中的一个最长连续子序列[left,right]使得a[left]为这段序列的最小值，a[right]为这段序列的最大值。</p>
<h2 id="问题分析">问题分析</h2><p>首先假设当前存在区间[l,r]，那么如果我们能用O(1)的时间返回这个区间的最大值所处位置a，以及最小值所处位置b，如果a<b的话区间[a,b]就是一组可行解，然后再分别递归调用[l,a-1] ，以及[b+1,r]即可，如果a="">b,则对三段分别进行递归调用即可解决问题。那么，我们需要怎么样事先处理好区间[l,r]的最大值呢？</b的话区间[a,b]就是一组可行解，然后再分别递归调用[l,a-1]></p>
<h2 id="RMQ问题的ST算法">RMQ问题的ST算法</h2><p>这就是一个经典的RMQ问题(<em>Range Minimum/Maximum Query</em>)，我们采用ST算法也就是倍增来解决。用f[i][j]表示从i开始长度为2^j的区间的最小值，那么很容易得出状态转移方程:f[i][j]=min{f[i][j-1],f[i+(1&lt;&lt;(j-1))][j-1]},这样一来只需要O(nlogn)的时间就可以求出一个区间的最值了。接下来就是查询，我们令k为满足2^k&lt;=R-L+1的最大整数，则以L为开头，以R为结尾的两个长度为2^k的区间合并起来即覆盖了查询区间[L,R],k=trunc(log(R-L+1)),最后的查询结果即为min{f[L][k],f[R-(1&lt;&lt;k)+1][k]}.</p>
<h2 id="预处理代码">预处理代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RMQ_init</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">		f[i][<span class="number">0</span>]=a[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;(<span class="number">1</span>&lt;&lt;j)&lt;=n;j++)</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+(<span class="number">1</span>&lt;&lt;j)-<span class="number">1</span>&lt;=n;i++)</span><br><span class="line">			f[i][j]=min(f[i][j-<span class="number">1</span>],f[i+(<span class="number">1</span>&lt;&lt;(j-<span class="number">1</span>))][j-<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="查询代码">查询代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> L,<span class="keyword">int</span> R)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> k=trunc(log2(R-L+<span class="number">1</span>));</span><br><span class="line">	<span class="keyword">return</span> min(f[L][k],f[R-(<span class="number">1</span>&lt;&lt;k)+<span class="number">1</span>][k]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="题目大意">题目大意</h2><p>给你一个序列，叫你找出该序列中的一个最长连续子序列[left,right]使得a[left]为这段序列的最小值，a[right]为这段序列的最大值。</p>
<h2 id="问题分析">问题分析</h2><p>首先假设当前存在区]]>
    </summary>
    
      <category term="OI" scheme="http://laphets.com/tags/OI/"/>
    
      <category term="倍增" scheme="http://laphets.com/tags/%E5%80%8D%E5%A2%9E/"/>
    
      <category term="理性" scheme="http://laphets.com/categories/%E7%90%86%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo的简易部署]]></title>
    <link href="http://laphets.com/2015/10/18/Hexo%E7%9A%84%E7%AE%80%E6%98%93%E9%83%A8%E7%BD%B2/"/>
    <id>http://laphets.com/2015/10/18/Hexo的简易部署/</id>
    <published>2015-10-18T09:55:26.000Z</published>
    <updated>2015-10-18T10:00:40.000Z</updated>
    <content type="html"><![CDATA[<h1 id="Hexo的简易部署">Hexo的简易部署</h1><blockquote>
<p>由于机房电脑重启自动还原，每次都得重新部署一次，因此来写篇文章谈谈Hexo的简易部署方法</p>
</blockquote>
<h2 id="首先在电脑中装好git和node-js">首先在电脑中装好<strong>git</strong>和<strong>node.js</strong></h2><h2 id="接着在U盘的Hexo目录打开git命令行，输入以下命令">接着在U盘的Hexo目录打开git命令行，输入以下命令</h2><h3 id="全局安装Hexo">全局安装Hexo</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> hexo -<span class="keyword">g</span></span></span><br></pre></td></tr></table></figure>
<h3 id="安装必要组件">安装必要组件</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure>
<h2 id="接着就是在电脑上生成SSHkey了">接着就是在电脑上生成<strong>SSHkey</strong>了</h2><h3 id="设置git的user_name和email：">设置git的user name和email：</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user<span class="class">.name</span> <span class="string">"laphets"</span></span><br></pre></td></tr></table></figure>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">git</span> config --global user.email <span class="string">"768066323<span class="variable">@qq</span>.com"</span></span><br></pre></td></tr></table></figure>
<h3 id="检查目录是否存在">检查目录是否存在</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ls</span> -<span class="keyword">al</span> ~/.ssh</span><br></pre></td></tr></table></figure>
<h3 id="生成SSHkey">生成<strong>SSHkey</strong></h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -<span class="tag">b</span> <span class="number">4096</span> -C <span class="string">"768066323@qq.com"</span></span><br></pre></td></tr></table></figure>
<h3 id="在GitHub上加入SSHkey">在GitHub上加入SSHkey</h3><h3 id="检测是否成功连接到GitHub">检测是否成功连接到GitHub</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Hexo的简易部署">Hexo的简易部署</h1><blockquote>
<p>由于机房电脑重启自动还原，每次都得重新部署一次，因此来写篇文章谈谈Hexo的简易部署方法</p>
</blockquote>
<h2 id="首先在电脑中装好git和node-js"]]>
    </summary>
    
      <category term="html" scheme="http://laphets.com/tags/html/"/>
    
      <category term="理性" scheme="http://laphets.com/categories/%E7%90%86%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写在NOIP2015初赛之后]]></title>
    <link href="http://laphets.com/2015/10/17/%E5%86%99%E5%9C%A8NOIP2015%E5%88%9D%E8%B5%9B%E4%B9%8B%E5%90%8E/"/>
    <id>http://laphets.com/2015/10/17/写在NOIP2015初赛之后/</id>
    <published>2015-10-17T15:38:17.000Z</published>
    <updated>2015-10-17T15:43:53.000Z</updated>
    <content type="html"><![CDATA[<p>还是码点东西吧，估计以后机会不多了…</p>
<h2 id="心里有点乱，是对前途渺茫而一无所知的那种。">心里有点乱，是对前途渺茫而一无所知的那种。</h2><h3 id="一个毫无征兆，出乎意料的结局">一个毫无征兆，出乎意料的结局</h3><p>  嗯，当时我简直不敢相信初赛就我过了？！ 有点惊讶，而更多的应该是惶恐和难受。难道以后就只有我一个人待在机房，就只有我一个人做题，一个人打解题报告？一切都显得飘忽而又茫然，与记忆中的画面丝毫不符。</p>
<h3 id="真的好乱，欲哭无泪的感觉">真的好乱，欲哭无泪的感觉</h3><p>  经常会想到在嘈杂的教室里，颓废的趴在桌子上，什么都不想干，什么都无法改变的感觉，那或许是一天中最低落的时候，因为我能真切的感受到自己不被理解的孤独。</p>
<h3 id="有人能够理解你吗？">有人能够理解你吗？</h3><p>  或许有，或许没有。但是我想，每个人之所以与其他人不同，正是有自己能不被他人所能够理解的地方，很多路，都得自己走。</p>
<h3 id="对未来有什么打算吗？">对未来有什么打算吗？</h3><p>  凭着感觉走吧，即使感觉感觉不太准确。因为除了感觉这飘忽不定的东西外，我别无所有。</p>
<h3 id="For_what?_What_for?">For what? What for?</h3><p>  不仅是为了自己，更是为了学校。我们是弱校，但不能因为是弱校而就让别人一直看不起我们，不能让学校的OI毁在我们这一届手里。</p>
<h2 id="Flag?">Flag?</h2><p>  当然是<strong>NOIP2015 1=</strong>啦!</p>
<hr>
<h2 id="One_More_Chance">One More Chance</h2><blockquote>
<p>You give me one more chance<br>I won’t let it down this time<br>Cause you awaiting me<br>Now when the curtain falls<br>I turn to you and smile because you<br>Gave me one more chance </p>
</blockquote>
<pre><code><span class="comment">----给那些一直支持着我的人，我会加油直到最后day2提交前的5分钟</span>
</code></pre><hr>
<h2 id="我相信我的决定是对的_而更相信事实与我的相信相符">我相信我的决定是对的 而更相信事实与我的相信相符</h2>]]></content>
    <summary type="html">
    <![CDATA[<p>还是码点东西吧，估计以后机会不多了…</p>
<h2 id="心里有点乱，是对前途渺茫而一无所知的那种。">心里有点乱，是对前途渺茫而一无所知的那种。</h2><h3 id="一个毫无征兆，出乎意料的结局">一个毫无征兆，出乎意料的结局</h3><p>  嗯，当时我简直不敢]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[写在NOIP2015初赛之前]]></title>
    <link href="http://laphets.com/2015/10/10/%E5%86%99%E5%9C%A8NOIP2015%E5%88%9D%E8%B5%9B%E4%B9%8B%E5%89%8D/"/>
    <id>http://laphets.com/2015/10/10/写在NOIP2015初赛之前/</id>
    <published>2015-10-10T13:06:37.000Z</published>
    <updated>2015-10-10T13:06:37.000Z</updated>
    <content type="html"><![CDATA[<h3 id="现在是2015年10月10日，再过一天就是2015年10月11日">现在是2015年10月10日，再过一天就是2015年10月11日</h3><h3 id="明天就是NOIP2015初赛的日子">明天就是NOIP2015初赛的日子</h3><h3 id="一年的努力不应白费，OIer们加油！">一年的努力不应白费，OIer们加油！</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span><span class="params">(rp=<span class="number">1</span>;;rp+=INF)</span></span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h3 id="现在是2015年10月10日，再过一天就是2015年10月11日">现在是2015年10月10日，再过一天就是2015年10月11日</h3><h3 id="明天就是NOIP2015初赛的日子">明天就是NOIP2015初赛的日子</h3><h3 id="一年的努]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我明白你会来，所以我等。]]></title>
    <link href="http://laphets.com/2015/10/03/%E6%88%91%E6%98%8E%E7%99%BD%E4%BD%A0%E4%BC%9A%E6%9D%A5%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E7%AD%89%E3%80%82/"/>
    <id>http://laphets.com/2015/10/03/我明白你会来，所以我等。/</id>
    <published>2015-10-03T10:04:50.000Z</published>
    <updated>2015-10-03T10:04:50.000Z</updated>
    <content type="html"><![CDATA[<p>   但愿若干年后我们想起这一幕仍能相视一笑。你之所以能够吸引我，并不在于你的相貌，亦或是其他。但你单纯，你乐观，你用你的真诚，用你对我的信任打动了我。我不知道我们间的感情能维持多久，我也不想知道，或许是一天，或许一个月，亦或是永远，但我也会把自己最真实的一面表现给你，正如你把最真实的那面表现给了我一样。就算哪一天我们会因对方的某些现所未知的缺点而失去信心，但我仍希望你能够一直微笑下去，因为，很简单，我喜欢看你傻乎乎的笑。我不会在意这次的选择是对亦或是错，我只希望，我们能够永远的是朋友，是那种能够用内心毫无遮挡与对方进行交流的朋友。我也不会在意这到底是不是最优解，因为用理性的思维去分析感性的问题向来是错的，我只想一直能够保护着你，让你一直开心，一直乐观，一直有着向未来进击的动力。你喜欢我，但不是那种喜欢，我也喜欢着你，但也不是那种喜欢，而我，正喜欢不是那种喜欢的喜欢。我不求有结果，不求同行，不求曾经拥有，但能在最美的年华遇见你，我很知足。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>   但愿若干年后我们想起这一幕仍能相视一笑。你之所以能够吸引我，并不在于你的相貌，亦或是其他。但你单纯，你乐观，你用你的真诚，用你对我的信任打动了我。我不知道我们间的感情能维持多久，我也不想知道，或许是一天，或许一个月，亦或是永远，但我也会把自己最真实的一面表现给你，正如]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[I took the one less traveled by, and that has made all the difference.]]></title>
    <link href="http://laphets.com/2015/09/19/I-took-the-one-less-traveled-by-and-that-has-made-all-the-difference/"/>
    <id>http://laphets.com/2015/09/19/I-took-the-one-less-traveled-by-and-that-has-made-all-the-difference/</id>
    <published>2015-09-19T10:07:12.000Z</published>
    <updated>2015-10-10T13:06:37.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>I took the one less traveled by, and that has made all the difference.</p>
</blockquote>
<p> 我曾经痴着想着，是否有人可以理解我，而现在，我明白，有些路注定要一个人走，没有人会懂你，会听你诉说你那些他并不感兴趣的经历，只有与孤独为伴，才不会惧怕孤独。（然后眼睛就湿了，或许算是一种感悟吧）</p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>I took the one less traveled by, and that has made all the difference.</p>
</blockquote>
<p> 我曾经痴着想着，是否有人可以理解我，而现在，我明白，有些路注定]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[为什么把时间当做朋友]]></title>
    <link href="http://laphets.com/2015/09/12/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%8A%8A%E6%97%B6%E9%97%B4%E5%BD%93%E5%81%9A%E6%9C%8B%E5%8F%8B/"/>
    <id>http://laphets.com/2015/09/12/为什么把时间当做朋友/</id>
    <published>2015-09-12T03:12:01.000Z</published>
    <updated>2015-10-10T13:06:37.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>焦虑是导致时间浪费、效率低下的根源之一。当人处于焦虑状态的时候，甚至可能出现一切理智都被清空的情况。</li>
<li>一个相对有效的策略：当有问题解决不了时，可以先把它记下来，然后继续前行。原因是你一直在前行，一直在积累，一直在成长。所以，到有了答案的那一刻，你不在是当初无能为力的你，你已经重生。</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>焦虑是导致时间浪费、效率低下的根源之一。当人处于焦虑状态的时候，甚至可能出现一切理智都被清空的情况。</li>
<li>一个相对有效的策略：当有问题解决不了时，可以先把它记下来，然后继续前行。原因是你一直在前行，一直在积累，一直在成长。所以，到有了答案的那一刻，]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="阅读" scheme="http://laphets.com/tags/%E9%98%85%E8%AF%BB/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[“相信我，你没错。”]]></title>
    <link href="http://laphets.com/2015/09/11/%E2%80%9C%E7%9B%B8%E4%BF%A1%E6%88%91%EF%BC%8C%E4%BD%A0%E6%B2%A1%E9%94%99%E3%80%82%E2%80%9D/"/>
    <id>http://laphets.com/2015/09/11/“相信我，你没错。”/</id>
    <published>2015-09-11T08:56:23.000Z</published>
    <updated>2015-10-17T16:09:04.000Z</updated>
    <content type="html"><![CDATA[<p>很多次，感觉自己要崩溃了，那种挣扎却无力逃脱的感觉令我害怕与难受。说到底，我是在跟自己较劲。我不是一个内心强大的人，当然也抵御不了外界的各种干扰。我会因为某件自己专注的人或事而沉陷其中，无法自拔。我畏惧并且讨厌那种失去方向失去理想的感觉，我曾一遍遍告诫自己不要太过于在意那些闲人琐事，然而我却会绞尽脑汁地在这种问题上思考、挣扎直至获得某种解脱。而我失败了，事实上我也不可能成功。人毕竟是感性的动物，当我试着通过自己的思维去调控自己的情感之时，既已宣告着失败（不然为什么智商和情商是两码事）。我挣扎过，努力过，纠结过，希冀过，而现在，我终于明白了发自内心的情感才是最真切的，才是自己所迫切希望释放出来的，是任何东西都阻挡不了的。而我的思维唯一需要做的，就是跟着自己的内心走。</p>
<hr>
<h3 id="“相信我，你没错。”">“相信我，你没错。”</h3>]]></content>
    <summary type="html">
    <![CDATA[<p>很多次，感觉自己要崩溃了，那种挣扎却无力逃脱的感觉令我害怕与难受。说到底，我是在跟自己较劲。我不是一个内心强大的人，当然也抵御不了外界的各种干扰。我会因为某件自己专注的人或事而沉陷其中，无法自拔。我畏惧并且讨厌那种失去方向失去理想的感觉，我曾一遍遍告诫自己不要太过于在意那些]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The next]]></title>
    <link href="http://laphets.com/2015/09/02/The-next/"/>
    <id>http://laphets.com/2015/09/02/The-next/</id>
    <published>2015-09-02T09:36:38.000Z</published>
    <updated>2015-10-10T13:06:37.000Z</updated>
    <content type="html"><![CDATA[<p>这个星期只有三天，依然感觉，做作业的时候很茫然，不知道该做什么，要做什么。经常被作业的未完成，英语的重默，各种书本，作业本的缺失给弄得火冒三丈（或许有时候没有表现出来）。如果站在一个历史的高度来评判现在的这种生活，我认为是值得的，每天晚上一节晚自修在机房或许是一天中最兴奋的时候。虽然利用率不高，或许说是在浪费时间，但起码，每天都在被鬼畜的玩意儿虐着进步。</p>
<p>我想，我将来一定会怀念这两个月的时光，以及所做出的努力。就算最后徒劳而无所得，但我起码发现了OI这个全新的不同于文化课枯燥的领域，能码着自己娴熟并能以为豪的代码，在被虐中收获新知，这或许就是对于我的幸福和满足。</p>
<p>这几个月势必是不好过的，会有想完成却没时间的作业，会有各种让我无望让我颓废的打击，还会有很多自己一个人独自煎熬的时光，但我坚信：<strong>坚持，不一定意味着成功；但放弃，则一定是失败。</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>这个星期只有三天，依然感觉，做作业的时候很茫然，不知道该做什么，要做什么。经常被作业的未完成，英语的重默，各种书本，作业本的缺失给弄得火冒三丈（或许有时候没有表现出来）。如果站在一个历史的高度来评判现在的这种生活，我认为是值得的，每天晚上一节晚自修在机房或许是一天中最兴奋的]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[The beginning]]></title>
    <link href="http://laphets.com/2015/08/28/The-beginning/"/>
    <id>http://laphets.com/2015/08/28/The-beginning/</id>
    <published>2015-08-28T12:30:23.000Z</published>
    <updated>2015-10-10T13:06:37.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://ww4.sinaimg.cn/mw690/005P1zB8gw1evilouwx0mj30xb0frdhk.jpg" alt="...."></p>
<blockquote>
<p>“你准备好心甘情愿的文化课被虐得不成样子了吗？”<br>“你准备好OI最后徒劳一场，什么东西都没得到了吗？”</p>
</blockquote>
<h2 id="抱着付出总有回报的心态，做好付出没有回报的准备。">抱着付出总有回报的心态，做好付出没有回报的准备。</h2><p>开学的第一个星期，或许是不适应还是咋的，反正心思不宁。只有真正在机房里打题、做作业没人干扰的时候才静得下心来，而其他时候，或许也只有在别人很吵很吵的时候才能有以上的境界，而其他时候，看到别人很用功，然后一种莫名的要被赶超的感觉就油然而生（特别是看到我姐那么认真的样子……）（而事实也正是如此）感觉自己还是挺脆弱的，这几天来有时候压力特大，感觉挺不住，又没人理的时候，就感觉特想哭。或许是我没做好一切又一切的准备：准备文化课各种逃课，旷课，欠参考书，欠作业，甚至会考试倒数；我也没做好迎接NOIP，被虐，最终什么结果也没有的准备。有时候，看着一堆堆别人做好的作业，而我一点没动就特受打击，感觉这特么不公平，可是，你是否又曾问过自己，当初到底是谁选择了这条路，是谁一年多来在苦苦支撑，不断在被虐中进步。甚至有时候发现自己长大了，内心中除了文化课，OI还装上了其他的东西，让我纠结其中。仅仅想让自己明白这样一个道理：任尔东西南北风，心外无物自然平。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://ww4.sinaimg.cn/mw690/005P1zB8gw1evilouwx0mj30xb0frdhk.jpg" alt="...."></p>
<blockquote>
<p>“你准备好心甘情愿的文化课被虐得不成样子了吗？”<br>“]]>
    </summary>
    
      <category term="思索" scheme="http://laphets.com/tags/%E6%80%9D%E7%B4%A2/"/>
    
      <category term="感性" scheme="http://laphets.com/categories/%E6%84%9F%E6%80%A7/"/>
    
  </entry>
  
</feed>
